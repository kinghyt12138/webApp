<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--Spring和MyBatis整合的配置-->

    <!--1.扫描包-->
    <context:component-scan base-package="com.ssm.service.*"/>
<!--    <context:component-scan base-package="com.ssm2.swagger"/>-->
    <!--2.加载外部配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties" file-encoding="utf-8"/>

    <!--3.配置德鲁伊数据库连接池数据源-->
    <bean id="ds" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--4.配置MyBatis的sqlSessionFactory:作用给MyBatis生成sqlsession-->
    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--设置session工厂使用的连接池-->
        <property name="dataSource" ref="ds"/>
        <!--设置mapper文件的位置-->
        <property name="mapperLocations" value="classpath:mappers/*.xml"/>
        <!--设置MyBatis的配置文件位置-->
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <!--设置MyBatis实体类的别名-->
        <property name="typeAliasesPackage" value="com.ssm.bean"/>
    </bean>

    <!--5.指定Mapper接口的位置，Spring底层会给Mapper成通过代理生成对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--Spring 框架会自动通过动态代理模式(反射) 生成对象-->
        <property name="basePackage" value="com.ssm.dao"/>
    </bean>

    <!--6.配置MyBatis的平台事务管理器，管理项目中的事务 DataSourceTransactionManager-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="ds"/>
    </bean>

    <!--7.开始注解事务支持-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

</beans>

